SET sql_mode = '';

CREATE TABLE IF NOT EXISTS oauth_client_details (
    client_id VARCHAR(256) PRIMARY KEY,
    client_secret VARCHAR(256),
    resource_ids VARCHAR(256),
    scope VARCHAR(256),
    authorized_grant_types VARCHAR(256),
    web_server_redirect_uri VARCHAR(256),
    authorities VARCHAR(256),
    access_token_validity INTEGER,
    refresh_token_validity INTEGER,
    additional_information VARCHAR(4096),
    autoapprove VARCHAR(256)
)

CREATE TABLE IF NOT EXISTS permission (
    id int (11) not null auto_increment,
    name varchar (512) default null ,
    primary key (id),
    unique key name (name)
)

CREATE TABLE IF NOT EXISTS role(
    id int (11) not null auto_increment,
    name varchar (512) default null ,
    primary key (id),
    unique key name (name)
)

CREATE TABLE IF NOT EXISTS user (
    id int (11) not null auto_increment,
    username varchar (100) not null,
    password varchar (1024) not null ,
    email varchar (1024) not null ,
    enabled tinyint(4) not null ,
    account_non_expired tinyint(4) not null ,
    credentials_non_expired tinyint(4) not null ,
    account_non_locked tinyint(4) not null ,
    primary key (id),
    unique key username (username)
)

CREATE TABLE IF NOT EXISTS permission_role (
    permission_id int (11) default null ,
    role_id int (11) default null ,
    key permission_id (permission_id),
    key role_id (role_id),
    constraint permission_role_fk_1 foreign key (permission_id) references permission (id),
    constraint permission_role_fk_2 foreign key (role_id) references role (id)
)

CREATE TABLE IF NOT EXISTS role_user (
    user_id int (11) default null ,
    role_id int (11) default null ,
    key user_id (user_id),
    key role_id (role_id),
    constraint permission_role_user_fk_1 foreign key (user_id) references user (id),
    constraint permission_role_user_fk_2 foreign key (role_id) references role (id)
)
